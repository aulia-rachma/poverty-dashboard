# -*- coding: utf-8 -*-
"""dashboard_kemiskinan.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1fG42JRbrWhUL9KVmbhRfF3yfkGqSnTA-
"""

import streamlit as st
import pandas as pd
import geopandas as gpd
import folium
from streamlit_folium import folium_static
import plotly.express as px

# Load data from GitHub repo folder (relative path)
csv_path = 'DATA_ANALISIS_PREDIKSI.csv'
shapefile_path = 'ADMIN_JAWABARAT_FIX.zip'

df = pd.read_csv(csv_path)
gdf = gpd.read_file(shapefile_path).to_crs("EPSG:4326")
gdf = gdf.merge(df, on='KABUPATEN', how='left')

# Sidebar and title
st.set_page_config(layout="wide")
st.title("üìç Dashboard Prediksi Kemiskinan Jawa Barat")

# Sidebar select
option = st.sidebar.selectbox(
    "Pilih Data yang Ingin Ditampilkan di Peta:",
    ['Actual_2019', 'Predicted_2019', 'Actual_2024', 'Predicted_2024']
)

# Check column existence
if option not in gdf.columns:
    st.error(f"Kolom '{option}' tidak ditemukan dalam data. Cek nama kolom di CSV.")
    st.stop()

# Folium Map
st.subheader("üó∫Ô∏è Peta Interaktif")
m = folium.Map(location=[-6.9, 107.6], zoom_start=8)

folium.Choropleth(
    geo_data=gdf,
    data=gdf,
    columns=['KABUPATEN', option],
    key_on='feature.properties.KABUPATEN',
    fill_color='YlOrRd',
    fill_opacity=0.7,
    line_opacity=0.2,
    legend_name=option
).add_to(m)

# Optional: Add tooltip with kabupaten name
folium.GeoJson(
    gdf,
    name="Labels",
    tooltip=folium.GeoJsonTooltip(fields=['KABUPATEN'], aliases=["Kabupaten:"])
).add_to(m)

folium_static(m, width=1000, height=600)

# Plotly Chart
st.subheader("üìä Visualisasi Distribusi")
fig = px.bar(
    gdf.sort_values(by=option, ascending=False),
    x='KABUPATEN',
    y=option,
    color=option,
    color_continuous_scale='YlOrRd',
    title=f"Distribusi {option} per Kabupaten"
)
fig.update_layout(xaxis_tickangle=-45, height=500)
st.plotly_chart(fig, use_container_width=True)

# Tabel Data
st.subheader("üìã Tabel Data Lengkap")
columns_to_show = ['KABUPATEN', 'Actual_2019', 'Predicted_2019', 'Abs_Error_2019',
                   'Actual_2024', 'Predicted_2024', 'Abs_Error_2024']
st.dataframe(gdf[columns_to_show].sort_values(by='KABUPATEN').reset_index(drop=True))
